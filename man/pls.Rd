% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multivariate.R
\name{pls}
\alias{pls}
\alias{mixomics_pls}
\alias{mixomics_pls_optimize}
\alias{mixomics_spls_optimize}
\title{PLS}
\usage{
mixomics_pls(object, y, ncomp, plot_scores = TRUE, ...)

mixomics_pls_optimize(
  object,
  y,
  ncomp,
  folds = 5,
  nrepeat = 50,
  plot_scores = TRUE,
  ...
)

mixomics_spls_optimize(
  object,
  y,
  ncomp,
  n_features = c(1:10, seq(20, 300, 10)),
  folds = 5,
  nrepeat = 50,
  plot_scores = TRUE,
  ...
)
}
\arguments{
\item{object}{a MetaboSet object}

\item{y}{character vector, column names of the grouping variable to predict}

\item{ncomp}{number of X components}

\item{plot_scores}{logical, if TRUE, a scatter plot with the first two PLS-components as x and y-axis will
be drawn, colored by the Y-variable. Only really makes sense if y is a single variable}

\item{...}{any parameters passed to \code{mixOmics::pls} or \code{mixOmics::spls}}

\item{folds}{the number of folds to use in k-fold cross validation}

\item{nrepeat}{the number of times to repeat the cross validation. Lower this for faster testing.}

\item{n_features}{the number of features to try for each component}
}
\value{
an object of class "mixo_pls" or "mixo_spls"
}
\description{
Simple wrappers for fitting a PLS model using pls function of the mixOmics package.
The object can then be passed to many of the mixOmics functions for prediction,
performance evaluation etc. Also plot a scores plot of the first two components.
\itemize{
\item{\code{mixomics_pls} A simple PLS model with set number of components and all features}
\item{\code{mixomics_pls_optimize} Test different numbers of components, choose the one with minimal mean square error}
\item{\code{mixomics_spls_optimize} sPLS model: Test different numbers of components and features,
choose the one with minimal mean square error}
}
}
\examples{
pls_res <- mixomics_pls(merged_sample, y = "Injection_order", ncomp = 3)
pls_opt <- mixomics_pls_optimize(merged_sample, y = "Injection_order", ncomp = 3)
pls_res <- mixomics_spls_optimize(merged_sample, y = "Injection_order", ncomp = 3,
                                  n_features <- c(1:10, 12, 15, 20))
}
\seealso{
\code{\link[mixOmics]{pls}}, \code{\link[mixOmics]{perf}},
\code{\link[mixOmics]{spls}}, \code{\link[mixOmics]{tune.spls}}
}
